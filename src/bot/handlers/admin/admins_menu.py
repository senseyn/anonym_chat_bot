#=========–ë–ò–ë–õ–ò–û–¢–ï–ö–ò –°–¢–ê–ù–î–ê–†–¢========
import asyncio

from aiogram import Router  # f - –º–∞–≥–∏—á–µ—Å–∫–∏–π —Ñ–∏–ª—å—Ç—Ä
from aiogram.enums import ChatAction
from aiogram.filters import Command
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from src.bot.states.menu_states import AdminStates
# ==========–ò–ú–ü–û–†–¢ –ú–û–ò–• –§–ê–ô–õ–û–í=========
from src.bot.handlers.admin.style_text_admins import admins_menu_text

#======================================
admins_router = Router()


#==========–§–£–ù–ö–¶–ò–ò=====================
def delete_mess_commands(error):
    print(f"\033[1;41m–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è\033[0m: {error}")


#======================–ö–û–ú–ê–ù–î–´ –ë–û–¢–ê==============================
@admins_router.message(Command('dashboard'))
async def hidde_command(message: Message, state: FSMContext):
    await state.set_state(AdminStates.Dashboard)
    if message.from_user.id in ADMINS:
        await message.answer("–ü—Ä–∏–≤–µ—Ç, –∞–¥–º–∏–Ω üë®‚Äçüíª", reply_markup=admin_main_kb)
    else:
        await message.answer("–ü—Ä–∏–≤–µ—Ç üëã", reply_markup=user_main_kb)
    # ========–ü–ï–ß–ê–¢–ê–ï–¢ –°–¢–ê–¢–£–°=========
    await message.bot.send_chat_action(
        chat_id=message.chat.id,
        action=ChatAction.TYPING
    )
    await asyncio.sleep(0.5)
    # ========–£–î–ê–õ–ï–ù–ò–ï –ò –ü–†–û–í–ï–†–ö–ê======
    try:
        await message.delete()
    except Exception as e:
        delete_mess_commands(e)
    # ================================
    text = admins_menu_text()  # –ü–†–ò–ù–ò–ú–ê–ï–ú –¢–ï–ö–°–¢
    await message.answer(text, parse_mode="HTML")
