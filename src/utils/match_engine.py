#=========–ë–ò–ë–õ–ò–û–¢–ï–ö–ò –°–¢–ê–ù–î–ê–†–¢========
from aiogram import Router, F  # - –º–∞–≥–∏—á–µ—Å–∫–∏–π —Ñ–∏–ª—å—Ç—Ä
from aiogram.fsm.context import FSMContext
# from aiogram.enums import ChatAction
from aiogram.types import Message

# ==========–ò–ú–ü–û–†–¢ –ú–û–ò–• –§–ê–ô–õ–û–í=========
from create_bot import bot
from src.db.database import Database
from src.keyboards.user_kb import stop_search_button, start_search_button, button_user_search_dialog
from src.middlewares.command_setter import set_commands_state
from src.states.menu_states import MenuStates, MenuSearch

#======================================
match_router = Router()

db = Database(r'src/db/db_handler.db')  # –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö


#======================–ö–û–ú–ê–ù–î–´ –ë–û–¢–ê==============================
@match_router.message(F.text.in_(["‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π", "/search"]), MenuSearch.Search)
async def search_next_user(message: Message):
    # –ü–†–û–í–ï–†–ö–ê –ù–ê–õ–ò–ß–ò–Ø –í –ü–û–ò–°–ö–ï –ò–õ–ò –ü–ï–†–ï–ö–õ–Æ–ß–ï–ù–ò–ï –ù–ê –°–õ–ï–î–£–Æ–©–ï–ì–û
    chat_id = message.chat.id
    if db.add_queue(chat_id) is True:
        await message.answer(f"–í–´ –£–ñ–ï –í –û–ß–ï–†–ï–î–ò! \n/stop - –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∏—Å–∫", parse_mode="HTML")
    else:
        # button = await button_user_search_dialog() # –¥–ª—è –¥—Ä—É–≥–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
        button = await stop_search_button()
        try:
            db.add_queue(chat_id)  # –î–û–ë–ê–í–õ–ï–ù–ò–ï –í –ë–ê–ó–£
            await message.answer(f"–ü–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞.. \n/stop - –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∏—Å–∫", parse_mode="HTML",
                                 reply_markup=button)
        except Exception as e:
            await message.answer(
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤–∞—Å –≤ –æ—á–µ—Ä–µ–¥—å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
            print(f"–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –æ—á–µ—Ä–µ–¥—å: {e}")


@match_router.message(F.text.in_(["‚ù§Ô∏è –ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫", "/search"]), MenuStates.Main)
async def search_new_user(message: Message, state: FSMContext):
    chat_id = message.chat.id
    if message.chat.type == "private":
        await state.set_state(MenuSearch.Search)
        await set_commands_state(state, message.chat.id)
        button = await stop_search_button()
        button_false = await start_search_button()
        button_new_chat = await button_user_search_dialog()
        chat_two = db.get_chat()  # –ø–æ–ª—É—á–∞–Ω–∏–µ –∞–π–¥–∏ –≤—Ç–æ—Ä–æ–≥–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ –∫–æ—Ç–æ—Ä—ã–π –ø–µ—Ä–≤—ã–π –≤ –æ—á–µ—Ä–µ–¥–∏

        if db.create_chat(chat_id, chat_two) is False:
            try:
                db.add_queue(chat_id)  # –î–û–ë–ê–í–õ–ï–ù–ò–ï –í –ë–ê–ó–£
                await message.answer(f"–ü–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞.. \n/stop - –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∏—Å–∫", parse_mode="HTML",
                                     reply_markup=button)
            except Exception as e:
                await state.set_state(MenuStates.Main)
                await set_commands_state(state, message.chat.id)
                await message.answer(
                    '''–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤–∞—Å –≤ –æ—á–µ—Ä–µ–¥—å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.
                    –ù–∞–∂–º–∏—Ç–µ /search - –ø–æ–∏—Å–∫–∞ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞
                    ''', parse_mode="HTML", reply_markup=button_false
                )
                print(f"–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –æ—á–µ—Ä–µ–¥—å: {e}")
        else:
            text_create_chat = '''
–°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –Ω–∞–π–¥–µ–Ω!\n
–°–ª–µ–¥—É—é—â–∏–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ - /search
–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∏–∞–ª–æ–≥ - /stop
'''
            await message.answer(text_create_chat, parse_mode="HTML", reply_markup=button_new_chat)
            await bot.send_message(chat_id=chat_two, text=text_create_chat, parse_mode="HTML",
                                   reply_markup=button_new_chat)
    else:
        await message.answer("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö.")


@match_router.message(F.text.in_(["‚ùå –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∏—Å–∫", "/stop", "üö´ –ó–∞–∫–æ–Ω—á–∏—Ç—å –¥–∏–∞–ª–æ–≥"]), MenuSearch.Search)
async def search_stop_user(message: Message, state: FSMContext):
    global stop_user, no_stop_user
    chat_id = message.chat.id
    chat_info = db.get_active_chat_delete(chat_id)  # –ø–æ–ª—É—á–∞–µ–º –∞–π–¥–∏
    button = await start_search_button() # –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∫–Ω–æ–ø–æ–∫

    if chat_info:
        print(chat_info, chat_id)
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤
        stop_user_one = chat_info.get('user_one')
        stop_user_two = chat_info.get('user_two')

        if str(chat_id) == stop_user_one:
            stop_user = stop_user_one
            no_stop_user = stop_user_two
        elif str(chat_id) == stop_user_two:
            stop_user = stop_user_two
            no_stop_user = stop_user_one
        else:
            await message.answer("–í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –∞–∫—Ç–∏–≤–Ω–æ–º —á–∞—Ç–µ.")

        try:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
            await bot.send_message(chat_id=stop_user, text="–í—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏ –¥–∏–∞–ª–æ–≥", parse_mode="HTML",
                                   reply_markup=button)
            await bot.send_photo(chat_id=no_stop_user, text="–°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –∑–∞–∫–æ–Ω—á–∏–ª –¥–∏–∞–ª–æ–≥", parse_mode="HTML",
                                 reply_markup=button)
            # —Å–æ—Å—Ç–æ—è–Ω–∏–µ 1 —é–∑–µ—Ä–∞
            await state.set_state(MenuStates.Main)
            await set_commands_state(state, message.chat.id)
            # —Å–æ—Å—Ç–æ—è–Ω–∏–µ 2 —é–∑–µ—Ä–∞.
            user_state_info = state.storage
            await user_state_info.set_state(no_stop_user, MenuStates.Main)
            await set_commands_state(state, no_stop_user)

            print(f"–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞ –æ—Ç–ø—Ä–≤–ª–µ–Ω–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {no_stop_user}.")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —á–∞—Ç–∞")
    else:
        # —É–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –æ—á–µ—Ä–µ–¥–∏
        try:
            db.delete_queue(chat_id)  # –£–î–ê–õ–ï–ù–ò–ï –ò–ó –û–ß–ï–†–ï–î–ò
            await state.set_state(MenuStates.Main)
            await set_commands_state(state, message.chat.id)
            await message.answer(f"–ü–æ–∏—Å–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. \n/search - –Ω–∞—á–∞—Ç—å –ø–æ–∏—Å–∫", parse_mode="HTML", reply_markup=button)
        except Exception as e:
            await state.set_state(MenuStates.Main)
            await set_commands_state(state, message.chat.id)
            await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –ø–æ–∏—Å–∫–∞. –í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é", parse_mode="HTML",
                                 reply_markup=button)
            print(f"–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –æ—á–µ—Ä–µ–¥–∏: {chat_id}, {e}")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
@match_router.message(F.text)
async def handle_photo_message(message: Message):
    # –õ–æ–≥–∏–∫–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–æ—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–π
    await forward_message(message)


@match_router.message(F.photo)
async def handle_photo_message(message: Message):
    # –õ–æ–≥–∏–∫–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–æ—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–π
    await forward_message(message)


@match_router.message(F.sticker)
async def handle_photo_message(message: Message):
    # –õ–æ–≥–∏–∫–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–æ—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–π
    await forward_message(message)


@match_router.message(F.video)
async def handle_photo_message(message: Message):
    # –õ–æ–≥–∏–∫–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–æ—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–π
    await forward_message(message)


@match_router.message(F.animation)
async def handle_photo_message(message: Message):
    # –õ–æ–≥–∏–∫–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–æ—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–π
    await forward_message(message)


@match_router.message(F.audio)
async def handle_photo_message(message: Message):
    # –õ–æ–≥–∏–∫–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–æ—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–π
    await forward_message(message)


@match_router.message(F.voice)
async def handle_photo_message(message: Message):
    # –õ–æ–≥–∏–∫–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–æ—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–π
    await forward_message(message)


@match_router.message(F.video_note)
async def handle_photo_message(message: Message):
    # –õ–æ–≥–∏–∫–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–æ—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–π
    await forward_message(message)


async def forward_message(message: Message):
    # –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏.
    chat_id = message.chat.id
    chat_info = db.get_active_chat(chat_id) # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —á–∞—Ç–∞ –≤ –±–∞–∑–µ
    if chat_info:
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤
        user_one = chat_info.get('user_one')
        user_two = chat_info.get('user_two')

        if str(chat_id) == user_one:
            recipient = user_two
        elif str(chat_id) == user_two:
            recipient = user_one
        else:
            await message.answer("–í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –∞–∫—Ç–∏–≤–Ω–æ–º —á–∞—Ç–µ.")
            return

        try:
            # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
            if message.text:
                await bot.send_message(recipient, message.text)
            elif message.photo:
                await bot.send_photo(recipient, message.photo[-1].file_id)
            elif message.sticker:
                await bot.send_sticker(recipient, message.sticker.file_id)
            elif message.video:
                await bot.send_video(recipient, message.video.file_id)
            elif message.animation:
                await bot.send_animation(recipient, message.animation.file_id)
            elif message.audio:
                await bot.send_animation(recipient, message.audio.file_id)
            elif message.voice:
                await bot.send_voice(recipient, message.voice.file_id)
            elif message.video_note:
                await bot.send_video_note(recipient, message.video_note.file_id)

            print(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {recipient}.")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫—É.")
    else:
        await message.answer("–í—ã –Ω–µ –≤ —á–∞—Ç–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –Ω–æ–≤—ã–π –ø–æ–∏—Å–∫.")
